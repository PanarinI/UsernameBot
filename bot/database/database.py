import asyncpg
import os
import logging
import config
from dotenv import load_dotenv


# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ Amvera
DB_CONFIG = {
    "database": os.getenv("DTBS"),
    "user": os.getenv("USER"),
    "password": os.getenv("PSWRD"),
    "host": os.getenv("HOST"),
    "port": os.getenv("PORT", "5432"),  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5432
}

logging.info(f"üîç DATABASE CONFIG:")
logging.info(f"    HOST = {DB_CONFIG['host']}")
logging.info(f"    DB NAME = {DB_CONFIG['database']}")
logging.info(f"    USER = {DB_CONFIG['user']}")
logging.info(f"    PASSWORD = {'‚úÖ' if DB_CONFIG['password'] else '‚ùå –ù–ï –ù–ê–ô–î–ï–ù–ê'}")

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ SQL-—Ñ–∞–π–ª–∞–º
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
CREATE_TABLE_SQL_PATH = os.path.join(BASE_DIR, "create_table.sql")
INSERT_SQL_PATH = os.path.join(BASE_DIR, "insert_username.sql")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SQL-—Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
if not os.path.exists(CREATE_TABLE_SQL_PATH):
    logging.error(f"‚ùå –§–∞–π–ª {CREATE_TABLE_SQL_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

if not os.path.exists(INSERT_SQL_PATH):
    logging.error(f"‚ùå –§–∞–π–ª {INSERT_SQL_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω!")

# –ó–∞–≥—Ä—É–∂–∞–µ–º SQL-–∑–∞–ø—Ä–æ—Å—ã –∏–∑ —Ñ–∞–π–ª–æ–≤
INSERT_SQL = None
if os.path.exists(INSERT_SQL_PATH):
    with open(INSERT_SQL_PATH, "r", encoding="utf-8") as file:
        INSERT_SQL = file.read()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
pool = None

async def init_db_pool():
    """–°–æ–∑–¥–∞—ë—Ç –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∫ –ë–î –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    global pool
    try:
        pool = await asyncpg.create_pool(**DB_CONFIG)
        logging.info("‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∫ –ë–î —Å–æ–∑–¥–∞–Ω.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—É–ª–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π: {e}")

async def close_db_pool():
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã."""
    global pool
    if pool:
        await pool.close()
        logging.info("‚úÖ –ü—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∑–∞–∫—Ä—ã—Ç.")

async def get_connection():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑ –ø—É–ª–∞."""
    global pool
    if not pool:  # –ï—Å–ª–∏ –ø—É–ª –Ω–µ —Å–æ–∑–¥–∞–Ω, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ
        await init_db_pool()
    return await pool.acquire()  # –ë–µ—Ä—ë–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑ –ø—É–ª–∞

async def init_db():
    """–°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç."""
    conn = await get_connection()
    try:
        if os.path.exists(CREATE_TABLE_SQL_PATH):
            with open(CREATE_TABLE_SQL_PATH, "r", encoding="utf-8") as file:
                create_table = file.read()  # –ß–∏—Ç–∞–µ–º SQL –∏–∑ —Ñ–∞–π–ª–∞

            await conn.execute(create_table)  # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –≤ –ë–î
            logging.info("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'generated_usernames' –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞.")
        else:
            logging.error(f"‚ùå –§–∞–π–ª {CREATE_TABLE_SQL_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω! –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
    finally:
        await pool.release(conn)  # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ

async def save_username_to_db(username: str, status: str, context: str, category: str, llm: str):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç username –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    if len(context) > config.MAX_CONTEXT_LENGTH:
        logging.warning(
            f"‚ö†Ô∏è –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π ({len(context)} —Å–∏–º–≤–æ–ª–æ–≤), –æ–±—Ä–µ–∑–∞–µ–º –¥–æ {config.MAX_CONTEXT_LENGTH}."
        )
        context = context[:config.MAX_CONTEXT_LENGTH]  # –û–±—Ä–µ–∑–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–æ –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã

    conn = await get_connection()
    try:
        if INSERT_SQL:
            await conn.execute(INSERT_SQL, username, status, category, context, llm)
            log_message = f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î: @{username} | {status} | {category} | {context} | {llm}"
            logging.info(log_message)
            print(log_message)
        else:
            logging.error("‚ùå INSERT_SQL –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! –§–∞–π–ª insert_username.sql –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –ë–î: {e}")
    finally:
        await pool.release(conn)  # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
