import asyncpg
import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

DTBS = os.getenv("DTBS")
USER = os.getenv("USER")
PSWRD = os.getenv("PSWRD")
HOST = os.getenv("HOST")

async def test_connection():
    try:
        conn = await asyncpg.connect(
            database=DTBS,
            user=USER,
            password=PSWRD,
            host=HOST
        )
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ!")
        await conn.close()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ:", e)

async def run_sql_file(filename):
    try:
        conn = await asyncpg.connect(
            database=DTBS,
            user=USER,
            password=PSWRD,
            host=HOST
        )
        with open(filename, 'r', encoding='utf-8') as file:
            sql_code = file.read()

        print("üìÑ SQL-–∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:\n", sql_code)

        # –ü—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL-–∫–æ–¥
        await conn.execute(sql_code)
        print("‚úÖ SQL-–∫–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

        await conn.close()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL:", e)

async def check_tables():
    try:
        conn = await asyncpg.connect(
            database=DTBS,
            user=USER,
            password=PSWRD,
            host=HOST
        )

        result = await conn.fetch("SELECT tablename FROM pg_tables WHERE schemaname = 'public';")
        print("üìã –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ:")
        for row in result:
            print("-", row['tablename'])

        await conn.close()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü:", e)

async def main():
    await test_connection()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await run_sql_file("/bot/database/schema.sql")  # –ó–∞–ø—É—Å–∫ SQL-–∫–æ–¥–∞
    await check_tables()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç–∞–±–ª–∏—Ü

asyncio.run(main())
