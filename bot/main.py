import asyncio
import sys
import os
import logging
from aiohttp import web
from setup import bot, dp
from handlers.start import start_router
from handlers.generate import generate_router
from handlers.check import check_router
from handlers.common import common_router
from handlers.help import help_router
from database.database import init_db
from utils.logger import setup_logging  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

setup_logging()  # –ó–∞–ø—É—Å–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

# ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–Ω—É–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞)
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# === 1Ô∏è‚É£ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã ===
IS_LOCAL = os.getenv("LOCAL_RUN", "false").lower() == "true"  # LOCAL_RUN=true ‚Üí Polling

# === 2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Webhook ===
WEBHOOK_HOST = os.getenv("WEBHOOK_URL", "https://namehuntbot-panarini.amvera.io")  # –î–æ–º–µ–Ω Amvera
WEBHOOK_PATH = f"/bot/{os.getenv('BOT_TOKEN')}"  # –ü—É—Ç—å –≤–µ–±—Ö—É–∫–∞
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"  # –ü–æ–ª–Ω—ã–π URL –≤–µ–±—Ö—É–∫–∞

# === 3Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Web-—Å–µ—Ä–≤–µ—Ä–∞ ===
WEBAPP_HOST = "0.0.0.0"  # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö
WEBAPP_PORT = int(os.getenv("PORT", 8080))  # –ü–æ—Ä—Ç –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 443 –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)

# === 4Ô∏è‚É£ –§—É–Ω–∫—Ü–∏–∏ —Å—Ç–∞—Ä—Ç–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ===
async def on_startup():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    await init_db()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    # ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.include_router(start_router)
    dp.include_router(help_router)
    dp.include_router(check_router)
    dp.include_router(generate_router)
    dp.include_router(common_router)

    if IS_LOCAL:
        await bot.delete_webhook()  # ‚ùó –û—Ç–∫–ª—é—á–∞–µ–º Webhook –ø–µ—Ä–µ–¥ Polling
        logging.info("üõë Webhook –æ—Ç–∫–ª—é—á—ë–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Polling.")
    else:
        try:
            await bot.delete_webhook()  # ‚ùó –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π Webhook –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
            await bot.set_webhook(WEBHOOK_URL)  # üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook
            logging.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Webhook: {e}")

async def on_shutdown(_):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
    logging.info("üö® –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

async def handle_update(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Webhook (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram)"""
    update = await request.json()  # –ü–æ–ª—É—á–∞–µ–º JSON
    await dp.feed_update(bot=bot, update=update)  # –ü–µ—Ä–µ–¥–∞—ë–º –≤ aiogram
    return web.Response()  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º OK

async def handle_root(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ (–µ—Å–ª–∏ –∑–∞—Ö–æ–¥–∏—à—å –≤ –±—Ä–∞—É–∑–µ—Ä)"""
    return web.Response(text="‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", content_type="text/plain")

# === 5Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ ===
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    await on_startup()  # –í—ã–ø–æ–ª–Ω—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

    if IS_LOCAL:
        # üîÑ Polling (–ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º)
        await dp.start_polling(bot)
    else:
        # üåê Webhook (—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º)
        app = web.Application()
        app.router.add_get("/", handle_root)  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
        app.router.add_post(WEBHOOK_PATH, handle_update)  # Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        app.on_shutdown.append(on_shutdown)  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        return app

# === 6Ô∏è‚É£ –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    app = loop.run_until_complete(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º main()

    if not IS_LOCAL:
        # –¢–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∂–∏–º–∞ Webhook (—Å–µ—Ä–≤–µ—Ä)
        web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT)
