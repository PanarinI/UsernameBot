import logging
import re
from datetime import datetime
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def escape_md(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2"""
    if not text:
        return ""
    return re.sub(r'([_*[\]()~`>#+-=|{}.!@-])', r'\\\1', text)

def generate_username_kb(usernames: list, context: str, style: str = None, duration: float = 0.0) -> (
        str, InlineKeyboardMarkup):
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    """
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å—Ç–∏–ª—å, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
    style_rus = f"–≤ —Å—Ç–∏–ª–µ *{escape_md(style)}*" if style else ""

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    time_prefix = f"\\[{escape_md(f'{duration:.2f}')} —Å–µ–∫\\] "

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º @
    message_text = (
            f"üé≠ {time_prefix}–í–æ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ {style_rus} –Ω–∞ —Ç–µ–º—É *{escape_md(context)}*:\n"
            + "\n".join([f"\\- @{escape_md(username)}" for username in usernames])
    )

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞" –∏ "–í –º–µ–Ω—é"
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="generate")],
        [InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="back_to_main")]
    ])

    return message_text, kb



def error_retry_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—à–∏–±–∫–∏: –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    kb_list = [
        [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="generate")],
        [InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="back_to_main")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb_list)

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def initial_styles_kb():
    """–ü–µ—Ä–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é: —Å—Ä–∞–∑—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å"""
    buttons = [
        [InlineKeyboardButton(text="üé≤ –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å", callback_data="no_style")],
        [InlineKeyboardButton(text="üé≠ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å", callback_data="choose_style")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def styles_kb():
    """–í—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é: –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è"""
    buttons = [
        [InlineKeyboardButton(text="üî• –≠–ø–∏—á–Ω—ã–π", callback_data="epic")],
        [InlineKeyboardButton(text="üé© –°—Ç—Ä–æ–≥–∏–π", callback_data="strict")],
        [InlineKeyboardButton(text="üé® –§–∞–Ω–∫–æ–≤—ã–π", callback_data="funky")],
        [InlineKeyboardButton(text="‚ö™ –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π", callback_data="minimal")],
        [InlineKeyboardButton(text="ü§° –ö—Ä–∏–Ω–∂–æ–≤—ã–π", callback_data="cringe")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main_style_menu")]
    ]
    logging.debug("–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏")  # üîç –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø—Ä–∏–Ω—Ç
    return InlineKeyboardMarkup(inline_keyboard=buttons)

