import time
import traceback
import asyncio
import sys
import os
import logging
from setup import bot, dp
from handlers.start import start_router
from handlers.generate import generate_router
from handlers.check import check_router
from handlers.common import common_router
from handlers.help import help_router
from database.database import init_db
from utils.logger import setup_logging

# ‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
setup_logging()

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# === üîç –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –Ω–∞ POLLING ===
IS_LOCAL = True  # ‚ùóÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º Polling

# === üöÄ –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
async def on_startup():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logging.info("üîó –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ Polling")
    await init_db()

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.include_router(start_router)
    dp.include_router(help_router)
    dp.include_router(check_router)
    dp.include_router(generate_router)
    dp.include_router(common_router)

    await bot.delete_webhook()  # ‚ùó –û—Ç–∫–ª—é—á–∞–µ–º Webhook –ø–µ—Ä–µ–¥ Polling
    logging.info("üõë Webhook –æ—Ç–∫–ª—é—á—ë–Ω! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Polling.")

# === üöÄ –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===
async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    await on_startup()
    await dp.start_polling(bot)  # ‚ùó –ó–∞–ø—É—Å–∫–∞–µ–º Polling

# === üî• –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    try:
        loop.run_until_complete(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ Polling

        # üî• –î–µ—Ä–∂–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∂–∏–≤—ã–º
        while True:
            logging.info("‚ôªÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, Amvera –Ω–µ —É–±–∏–≤–∞–π –µ–≥–æ!")
            time.sleep(30)

    except Exception as e:
        error_message = traceback.format_exc()
        logging.error(f"‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞: {e}\n{error_message}")
