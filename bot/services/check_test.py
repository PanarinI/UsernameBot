import aiohttp
import asyncio

async def check_tme(username):
    url = f"https://t.me/{username}"
    async with aiohttp.ClientSession() as session:
        async with session.get(url, ssl=False) as response:
            text = await response.text()
            print(f"\nüîé –ü—Ä–æ–≤–µ—Ä—è–µ–º t.me/{username}")
            print(f"üõ† HTTP Status: {response.status}")
            print(f"üìú HTML Response: {text[:1000]}")  # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤ HTML

async def main():
    usernames = ["macron", "zybakul", "yandex", "pukin"]
    await asyncio.gather(*(check_tme(username) for username in usernames))

asyncio.run(main())












import aiohttp
import re
import ssl
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest

async def check_username_availability(username: str) -> str:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ —é–∑–µ—Ä–Ω–µ–π–º –≤ Telegram —á–µ—Ä–µ–∑ API –∏ t.me."""
    print(f"\n[STEP 1] üîé –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É username: @{username}")

    try:
        print("[STEP 2] üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram API...")
        await bot.get_chat(f"@{username}")  # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–∞—Ç
        print(f"[RESULT] ‚ùå –ò–º—è @{username} –∑–∞–Ω—è—Ç–æ (–Ω–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ API).")
        return "–ó–∞–Ω—è—Ç–æ"

    except TelegramBadRequest as e:
        error_message = str(e).lower()
        print(f"[INFO] ‚ùó –û—à–∏–±–∫–∞ API: {error_message}")

        if "chat not found" in error_message:
            print(f"[STEP 3] üîπ –ò–º—è @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ API. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–µ—Ä–µ–∑ t.me...")
            return await check_username_via_web(username)

        print(f"[ERROR] ‚ùó –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ API: {error_message}")
        return "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"


async def check_username_via_web(username: str) -> str:
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ t.me/{username} —Å –∞–Ω–∞–ª–∏–∑–æ–º HTML-–∫–æ–¥–∞."""
    url = f"https://t.me/{username}"
    print("[STEP 4] üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ t.me...")

    ssl_context = ssl.create_default_context()
    ssl_context.check_hostname = False
    ssl_context.verify_mode = ssl.CERT_NONE

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, ssl=ssl_context) as response:
                text = await response.text()

                if response.status == 404:
                    print(f"[RESULT] ‚úÖ –ò–º—è @{username} —Å–≤–æ–±–æ–¥–Ω–æ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —á–µ—Ä–µ–∑ t.me)")
                    return "–°–≤–æ–±–æ–¥–Ω–æ"

                title_match = re.search(r"<title>(.*?)</title>", text, re.IGNORECASE)
                title_text = title_match.group(1) if title_match else ""

                if "tgme_page_title" in text or "If you have Telegram, you can contact" in text:
                    print(f"[RESULT] ‚ùå –ò–º—è @{username} –∑–∞–Ω—è—Ç–æ (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ —á–µ—Ä–µ–∑ t.me)")
                    return "–ó–∞–Ω—è—Ç–æ"

                if f"Telegram: Contact @{username}" in title_text and "tgme_page_title" not in text:
                    print(f"[RESULT] ‚úÖ –ò–º—è @{username} —Å–≤–æ–±–æ–¥–Ω–æ (–ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É, –Ω–æ –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è)")
                    return "–°–≤–æ–±–æ–¥–Ω–æ"

                print(f"[WARNING] ‚ö†Ô∏è –ù–µ–ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç t.me –¥–ª—è @{username}: {response.status}, HTML: {text[:500]}")
                return "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"

    except aiohttp.ClientError as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ç–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ t.me
        print(f"[ERROR] ‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ t.me: {e}")
        return "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å"
