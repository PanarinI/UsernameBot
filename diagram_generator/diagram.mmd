flowchart TD
  %% Сценарий прямой проверки username
  subgraph Direct_Check[Проверка username]
    DC1[Пользователь вводит username] --> DC2[handlers/check.py]
    DC2 --> DC3[Вызов services/check.py]
    DC3 --> DC_out[Возврат результата проверки пользователю]
  end

  %% Сценарий генерации username
  subgraph Generation[Генерация username]
    G1[Пользователь вводит контекст: ключевые слова] --> G2[handlers/generate.py]
    G2 --> G3[services/generate.py]
    G3 --> G4[Запрос к OpenAI API: chat.completions.create]
    G4 --> G5[Получение списка сгенерированных username]
    G5 --> G6[Для каждого username: вызов services/check.py]
    G6 --> G7[Фильтрация: выбираем только Свободен]
    G7 --> G_out[Возврат итогового списка пользователю]
  end

  %% Общий модуль проверки username
  subgraph Check_Service[services/check.py: Проверка username]
    CS1[Запрос к Telegram API: get_chat] --> CS2{Результат Telegram API}
    CS2 -- chat найден --> CS3[Результат: Занято]
    CS2 -- chat not found --> CS4[Выполнить HTTP GET к t.me]
    CS4 --> CS5{Анализ HTML ответа t.me}
    CS5 -- 404 --> CS6[Результат: Свободен]
    CS5 -- найден tgme_page_title или 'If you have Telegram, you can contact' --> CS7[Результат: Занято]
    CS5 -- найден Telegram: Contact @username без tgme_page_title --> CS6
    CS5 -- нет совпадений --> CS8[Результат: Невозможно определить]
  end

  %% Связь вызова общего модуля проверки
  DC3 --> CS1
  G6 --> CS1

  %% Вывод результата для прямой проверки
  CS3 --- DC_out
  CS6 --- DC_out
  CS7 --- DC_out
  CS8 --- DC_out

  %% Фильтрация в генерации: учитываем только результат "Свободен"
  CS6 --- G7
